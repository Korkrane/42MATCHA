{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport ActiveConversations from './ActiveConversations';\nimport NavBar from './NavBar';\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\n\n// Hook\n// Parameter is the boolean, with default \"false\" value\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useToggle = function () {\n  _s();\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  // Initialize the state\n  const [state, setState] = useState(initialState);\n\n  // Define and memorize toggler function in case we pass down the component,\n  // This function change the boolean value to it's opposite value\n  const toggle = useCallback(() => setState(state => !state), []);\n  return [state, toggle];\n};\n_s(useToggle, \"UzpTDfYauCPNSHGcq7l3+6aW5fE=\");\nconst ProfileCard = () => {\n  _s2();\n  const [isTextChanged, setIsTextChanged] = useToggle();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"lol\"\n  }, void 0, false);\n};\n_s2(ProfileCard, \"/syTgL6qCWIy/2uv6gUeWEehFgE=\", false, function () {\n  return [useToggle];\n});\n_c = ProfileCard;\nexport default ProfileCard;\nvar _c;\n$RefreshReg$(_c, \"ProfileCard\");","map":{"version":3,"names":["ActiveConversations","NavBar","useNavigate","useState","useEffect","useCallback","useToggle","initialState","state","setState","toggle","ProfileCard","isTextChanged","setIsTextChanged"],"sources":["/home/bahaas/matcha-chat/src/Components/ProfileCard.js"],"sourcesContent":["import ActiveConversations from './ActiveConversations';\nimport NavBar from './NavBar';\nimport { useNavigate} from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\n\n// Hook\n// Parameter is the boolean, with default \"false\" value\nconst useToggle = (initialState = false) => {\n    // Initialize the state\n    const [state, setState] = useState(initialState);\n\n    // Define and memorize toggler function in case we pass down the component,\n    // This function change the boolean value to it's opposite value\n    const toggle = useCallback(() => setState(state => !state), []);\n\n    return [state, toggle]\n}\n\n\nconst ProfileCard = () => {\n\n    const [isTextChanged, setIsTextChanged] = useToggle();\n\n    return(\n        <>\n        lol\n        </>\n    )\n}\n\nexport default ProfileCard;"],"mappings":";;AAAA,OAAOA,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,WAAW,QAAO,kBAAkB;AAC7C,SAASC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;;AAExD;AACA;AAAA;AAAA;AACA,MAAMC,SAAS,GAAG,YAA0B;EAAA;EAAA,IAAzBC,YAAY,uEAAG,KAAK;EACnC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACI,YAAY,CAAC;;EAEhD;EACA;EACA,MAAMG,MAAM,GAAGL,WAAW,CAAC,MAAMI,QAAQ,CAACD,KAAK,IAAI,CAACA,KAAK,CAAC,EAAE,EAAE,CAAC;EAE/D,OAAO,CAACA,KAAK,EAAEE,MAAM,CAAC;AAC1B,CAAC;AAAA,GATKJ,SAAS;AAYf,MAAMK,WAAW,GAAG,MAAM;EAAA;EAEtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,SAAS,EAAE;EAErD,oBACI;IAAA;EAAA,iBAEG;AAEX,CAAC;AAAA,IATKK,WAAW;EAAA,QAE6BL,SAAS;AAAA;AAAA,KAFjDK,WAAW;AAWjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}